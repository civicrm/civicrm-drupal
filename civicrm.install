<?php
/*
 +--------------------------------------------------------------------+
 | CiviCRM version 4.6                                                |
 +--------------------------------------------------------------------+
 | Copyright CiviCRM LLC (c) 2004-2015                                |
 +--------------------------------------------------------------------+
 | This file is a part of CiviCRM.                                    |
 |                                                                    |
 | CiviCRM is free software; you can copy, modify, and distribute it  |
 | under the terms of the GNU Affero General Public License           |
 | Version 3, 19 November 2007 and the CiviCRM Licensing Exception.   |
 |                                                                    |
 | CiviCRM is distributed in the hope that it will be useful, but     |
 | WITHOUT ANY WARRANTY; without even the implied warranty of         |
 | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.               |
 | See the GNU Affero General Public License for more details.        |
 |                                                                    |
 | You should have received a copy of the GNU Affero General Public   |
 | License and the CiviCRM Licensing Exception along                  |
 | with this program; if not, contact CiviCRM LLC                     |
 | at info[AT]civicrm[DOT]org. If you have questions about the        |
 | GNU Affero General Public License or the licensing of CiviCRM,     |
 | see the CiviCRM license FAQ at http://civicrm.org/licensing        |
 +--------------------------------------------------------------------+
*/

/**
 *
 * @package CRM
 * @copyright CiviCRM LLC (c) 2004-2015
 * $Id$
 *
 */
function civicrm_install() {}

/**
 * Implementation of hook_uninstall( )
 */
function civicrm_uninstall() {
  require_once 'civicrm.module';

  if (!civicrm_initialize()) {
    return;
  }

  require_once 'CRM/Core/Config.php';
  $config = CRM_Core_Config::singleton();

  require_once 'CRM/Core/DAO.php';
  CRM_Core_DAO::dropAllTables();
}

function civicrm_requirements($phase) {
  $t = get_t();
  module_load_include('inc', 'civicrm');
  global $base_url;
  $civicrm_path = drupal_get_path('module', 'civicrm');

  //remove the last occurrence of 'drupal' from path
  $pos = strrpos($civicrm_path, 'drupal');

  if ($pos !== false) {
    $civicrm_path = substr_replace($civicrm_path, '', $pos, strlen($civicrm_path));
  }

  $url = $base_url . '/' . $civicrm_path . 'install/index.php';
  $requirements = array();

  // @TODO Use conf_path(TRUE) here instead of glob().
  $settings = glob('sites/*/civicrm.settings.php');

  // Settings is configurated.
  $requirement_settings = array(
    'title' => $t('CiviCRM Settings'),
    'value' => $t('CiviCRM has been configured.'),
    'severity' => REQUIREMENT_OK,
  );
  if (empty($settings) && $phase == 'install') {
    $requirement_settings = array_merge($requirement_settings, array(
      'value' => $t('CiviCRM settings file does not exist. It should be created by CiviCRM <a href="!link">install</a>',
        array('!link' => $url)),
      'severity' => REQUIREMENT_ERROR,
    ));
  }
  $requirements['settings'] = $requirement_settings;

  // Libraries API must be present.
  $requirement_libraries = array(
    'title' => $t('CiviCRM Libraries API module'),
    'value' => $t('CiviCRM was able to find Libraries module.'),
  );
  if (!module_exists('libraries')) {
    $requirement_libraries = array_merge($requirement_libraries, array(
      'value' => $t('Please install and enable the !libraries module', array('!link' => l('Libraries', 'https://drupal.org/project/libraries'))),
      'severity' => REQUIREMENT_ERROR,
    ));
  }
  $requirements[] = $requirement_libraries;

  // Checking module_exists() means we don't fire when in the act
  // of enabling a module.
  $civicrm_path = libraries_get_path('civicrm');
  if (module_exists('civicrm')) {
    $requirement_core = array(
      'title' => $t('CiviCRM Core'),
      'value' => $t('CiviCRM Core is installed in %civicrm_path.', array('%civicrm_path' => $civicrm_path)),
      'severity' => REQUIREMENT_OK,
    );
    if (!_civicrm_library_installed()) {
      $requirement_core = array_merge($requirement_core, array(
        'title' => $t('CiviCRM Core'),
        'value' => $t('Not found at %civicrm_path', array('%civicrm_path' => $civicrm_path)),
        'description' => _civicrm_library_warning(),
        'severity' => REQUIREMENT_ERROR,
      ));
    }
  }
  $requirements['civicrm_core'] = $requirement_core;

  return $requirements;
}

/**
 * Update CiviCRM module weight
 */
function civicrm_update_7400(&$sandbox) {
  db_query("UPDATE {system} SET weight = 100 WHERE name = 'civicrm'");
}
